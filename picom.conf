#################################
#             Corners           #
#################################
# requires: https://github.com/sdhand/compton
# corner-radius = 15.0;
rounded-corners-exclude = [
  #"window_type = 'normal'",
  "class_g = 'awesome'",
  "class_g = 'URxvt'",
  "class_g = 'XTerm'",
  # "class_g = 'kitty'",
  # "class_g = 'Alacritty'",
  "class_g     *= 'chrome'",
  "class_g = 'Polybar'",
  "class_g = 'code-oss'",
  "class_g = 'firefox'",
  "window_type = 'desktop'",
  "class_g *= 'Minecraft'",
  "class_g *= 'Peek'",
  "class_g = 'Thunderbird'"
  # "class g = 'Tk'",
];

# round-borders = 1;
round-borders-exclude = [
  #"class_g = 'TelegramDesktop'",
  "class_g *= 'Minecraft'",
  "class_g *= 'Peek'",
];

# Specify a list of border width rules, in the format `PIXELS:PATTERN`, 
# Note we don't make any guarantee about possible conflicts with the
# border_width set by the window manager.
#
# example:
#    round-borders-rule = [ "2:class_g = 'URxvt'" ];
#
round-borders-rule = [
  "3:class_g      = 'XTerm'",
  "3:class_g      = 'URxvt'",
  # "10:class_g     = 'Alacritty'",
  "15:class_g     = 'Signal'"
];

#################################
#             Shadows           #
#################################


# Enabled client-side shadows on windows. Note desktop windows 
# (windows with '_NET_WM_WINDOW_TYPE_DESKTOP') never get shadow, 
# unless explicitly requested using the wintypes option.
#
shadow = true;

# The blur radius for shadows, in pixels. (defaults to 12)
shadow-radius = 25;

# The opacity of shadows. (0.0 - 1.0, defaults to 0.75)
shadow-opacity = .90 

# The left offset for shadows, in pixels. (defaults to -15)
shadow-offset-x = -20;
shadow-offset-y = -15;
shadow-ignore-shaped = true;

# Specify a list of conditions of windows that should have no shadow.
#
# examples:
#   shadow-exclude = "n:e:Notification";
#
# shadow-exclude = []
shadow-exclude = [
  # "name = 'Notification'",
  # "class_g = 'Conky'",
  # "class_g ?= 'Notify-osd'",
  # "class_g = 'Cairo-clock'",
  # "class_g = 'slop'",
  "class_g = 'Polybar'",
  "class_g = 'google-chrome-stable'",
  "class_g = 'firefox-nightly'",
  "class_g = 'firefox'",
  "class_g *= 'Minecraft'",
  "class_g *= 'Peek'",
  # "_GTK_FRAME_EXTENTS@:c"
];

#################################
#           Fading              #
#################################

fading = true;
fade-delta = 6;
fade-in-step = 0.03;
fade-out-step = 0.03;
# no-fading-openclose = false;
# no-fading-destroyed-argb = false

fade-exclude = [
  "class_g *= 'Peek'",
  "class_g = 'slop'",   # maim
  "class_g *= 'Minecraft'",   # maim
]

#################################
#   Transparency / Opacity      #
#################################


# Opacity of inactive windows. (0.1 - 1.0, defaults to 1.0)
# inactive-opacity = 0.93;
inactive-opacity = 0.80;

# Opacity of window titlebars and borders. (0.1 - 1.0, disabled by default)
frame-opacity = 0.0;
# menu-opacity = 1.0

# Let inactive opacity set by -i override the '_NET_WM_OPACITY' values of windows.
# inactive-opacity-override = true
inactive-opacity-override = false;

# Default opacity for active windows. (0.0 - 1.0, defaults to 1.0)
# active-opacity = 1.0;
active-opacity = 0.85;

# Dim inactive windows. (0.0 - 1.0, defaults to 0.0)
# inactive-dim = 0.0

# Specify a list of conditions of windows that should always be considered focused.
# focus-exclude = []
focus-exclude = [
  "class_g *= 'Peek'",
  "class_g = 'Cairo-clock'",
  "class_g = 'Bar'",                    # lemonbar
  "class_g *= 'Minecraft'", 
  "class_g = 'slop'"                    # maim
];

# Use fixed inactive dim value, instead of adjusting according to window opacity.
# inactive-dim-fixed = 1.0

# Specify a list of opacity rules, in the format `PERCENT:PATTERN`, 
# like `50:name *= "Firefox"`. picom-trans is recommended over this. 
# Note we don't make any guarantee about possible conflicts with other 
# programs that set '_NET_WM_WINDOW_OPACITY' on frame or client windows.
# example:
#    opacity-rule = [ "80:class_g = 'URxvt'" ];
#
# opacity-rule = []
opacity-rule = [
  # "90:class_g    = 'Alacritty'",
  # "90:class_g     *= 'chrome'",
  "80:class_g     = 'Bar'",             # lemonbar
  "100:class_g    = 'slop'",            # maim
  "100:class_g    = 'feh'",
  "100:class_g    = 'Viewnior'",
  "100:class_g    *= 'chrome'",
  "100:class_g    *= 'MPlayer'",
  "100:class_g    *= 'Geeqie'",
  "100:class_g    = 'XTerm'",
  "100:class_g    = 'URxvt'",
  # "100:class_g    = 'kitty'",
  # "90:class_g     *= 'Polybar'",
  "100:class_g     *= 'Polybar'",
  "100:class_g    = 'code-oss'",
  "100:class_g    = 'Meld'",
  "70:class_g     = 'TelegramDesktop'",
  "90:class_g     = 'Joplin'",
  "100:class_g    *= 'firefox'",
  "100:class_g    = 'Thunderbird'",
  "100:class_g    *= 'mpv'",
  "100:class_g    *= 'vlc'",
  "100:class_g    *= 'Minecraft'",
  "100:name    *= 'CTS on QEMU/KVM'",
  "100:name    *= 'mpv'",
];


#################################
#     Background-Blurring       #
#################################

blur: {
  # requires: https://github.com/ibhagwan/picom
  backend = "glx"
  method = "dual_kawase";
  strength = 6;
  deviation = 1.0;
  # kernel = "11x11gaussian";
  background = true;
  background-frame = false;
  background-fixed = false;
  # kern = "3x3box";
}

# Exclude conditions for background blur.
blur-background-exclude = [
  "class_g *= 'Peek'",
  "window_type = 'dock'",
  "window_type = 'desktop'",
  "class_g = 'URxvt'",
  "class_g *= 'Minecraft'",
  #
  # prevents picom from blurring the background
  # when taking selection screenshot with `main`
  # https://github.com/naelstrof/maim/issues/130
  "class_g = 'slop'",
  "_GTK_FRAME_EXTENTS@:c"
];


#################################
#       General Settings        #
#################################

experimental-backends = true;
backend = "glx";
# backend = "xrender";
vsync = false;
mark-wmwin-focused = true;
mark-ovredir-focused = true;
detect-rounded-corners = true;
detect-client-opacity = true;
refresh-rate = 142;
# sw-opti = 
# use-ewmh-active-win = false
unredir-if-possible = true;
unredir-if-possible-delay = 0
# unredir-if-possible-exclude = []
detect-transient = true;
detect-client-leader = true;
resize-damage = 1;
# invert-color-include = []

# GLX backend: Avoid using stencil buffer, useful if you don't have a stencil buffer. 
# Might cause incorrect opacity when rendering transparent content (but never 
# practically happened) and may not work with blur-background. 
# My tests show a 15% performance boost. Recommended.
#
glx-no-stencil = true;

# GLX backend: Avoid rebinding pixmap on window damage. 
# Probably could improve performance on rapid window content changes, 
# but is known to break things on some drivers (LLVMpipe, xf86-video-intel, etc.).
# Recommended if it works.
#
glx-no-rebind-pixmap = true;

# Disable the use of damage information. 
# This cause the whole screen to be redrawn everytime, instead of the part of the screen
# has actually changed. Potentially degrades the performance, but might fix some artifacts.
# The opposing option is use-damage
#
# no-use-damage = false
use-damage = true;
# Use X Sync fence to sync clients' draw calls, to make sure all draw 
# calls are finished before picom starts drawing. Needed on nvidia-drivers 
# with GLX backend for some users.
#
# xrender-sync-fence = true;

# Make transparent windows clip other windows like non-transparent windows do,
# instead of blending on top of them.
#
# transparent-clipping = false

# Set the log level. Possible values are:
#  "trace", "debug", "info", "warn", "error"
# in increasing level of importance. Case doesn't matter. 
# If using the "TRACE" log level, it's better to log into a file 
# using *--log-file*, since it can generate a huge stream of logs.
#
# log-level = "debug"
log-level = "info";

# Set the log file.
# If *--log-file* is never specified, logs will be written to stderr. 
# Otherwise, logs will to written to the given file, though some of the early 
# logs might still be written to the stderr. 
# When setting this option from the config file, it is recommended to use an absolute path.
#
# log-file = '/path/to/your/log/file'

# Show all X errors (for debugging)
# show-all-xerrors = false

# Write process ID to a file.
# write-pid-path = '/path/to/your/log/file'

# Window type settings
# 
# 'WINDOW_TYPE' is one of the 15 window types defined in EWMH standard: 
#     "unknown", "desktop", "dock", "toolbar", "menu", "utility", 
#     "splash", "dialog", "normal", "dropdown_menu", "popup_menu", 
#     "tooltip", "notification", "combo", and "dnd".
# 
# Following per window-type options are available: ::
# 
#   fade, shadow:::
#     Controls window-type-specific shadow and fade settings.
# 
#   opacity:::
#     Controls default opacity of the window type.
# 
#   focus:::
#     Controls whether the window of this type is to be always considered focused. 
#     (By default, all window types except "normal" and "dialog" has this on.)
# 
#   full-shadow:::
#     Controls whether shadow is drawn under the parts of the window that you 
#     normally won't be able to see. Useful when the window has parts of it 
#     transparent, and you want shadows in those areas.
# 
#   redir-ignore:::
#     Controls whether this type of windows should cause screen to become 
#     redirected again after been unredirected. If you have unredir-if-possible
#     set, and doesn't want certain window to cause unnecessary screen redirection, 
#     you can set this to `true`.


# wintypes:
# {
#   normal = { fade = true; shadow = true; }
#   tooltip = { fade = true; shadow = false; opacity = 0.75; focus = true; full-shadow = true; };
#   dock = { shadow = false; }
#   dnd = { shadow = false; }
#   popup_menu = { opacity = 0.8; }
#   dropdown_menu = { opacity = 0.8; }
# };
# # https://raw.githubusercontent.com/ibhagwan/picom/next/picom.sample.conf

